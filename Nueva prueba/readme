-- Esquema: barranquillatours

CREATE SCHEMA IF NOT EXISTS barranquillatours DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
USE barranquillatours;

-- Tabla de usuarios (clientes y administradores)
CREATE TABLE usuarios (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(100) NOT NULL,
  apellido VARCHAR(100) NOT NULL,
  email VARCHAR(100) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL, -- Guardar siempre con hash
  telefono VARCHAR(30),
  rol ENUM('cliente', 'admin') DEFAULT 'cliente',
  fecha_registro TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB;
 
 -- Tabla de administradores (detalles específicos)
CREATE TABLE administradores (
  id INT AUTO_INCREMENT PRIMARY KEY,
  usuario_id INT NOT NULL, -- Relación con el usuario
  fecha_inicio TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  fecha_ultima_actividad TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  permisos JSON NOT NULL, -- Permisos específicos en formato JSON
  CONSTRAINT fk_administrador_usuario FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

-- Tabla de tours
CREATE TABLE tours (
  id INT AUTO_INCREMENT PRIMARY KEY,
  titulo VARCHAR(255) NOT NULL,
  ubicacion VARCHAR(150) NOT NULL,
  precio DECIMAL(10,2) NOT NULL,
  duracion_horas DECIMAL(5,2) NOT NULL,
  descripcion TEXT NOT NULL,
  url_imagen VARCHAR(255),
  fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB;


-- Tabla de reservas
CREATE TABLE reservas (
  id INT AUTO_INCREMENT PRIMARY KEY,
  usuario_id INT NOT NULL,
  tour_id INT NOT NULL,
  fecha_reserva DATETIME NOT NULL,
  cantidad_personas INT NOT NULL,
  estado ENUM('pendiente', 'confirmada', 'cancelada') DEFAULT 'pendiente',
  total_pagado DECIMAL(10,2) NOT NULL,
  fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_reserva_usuario FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fk_reserva_tour FOREIGN KEY (tour_id) REFERENCES tours(id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;


-- Tabla de pagos
CREATE TABLE pagos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  reserva_id INT NOT NULL,
  metodo ENUM('tarjeta', 'efectivo', 'transferencia') NOT NULL,
  monto DECIMAL(10,2) NOT NULL,
  fecha_pago TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_pago_reserva FOREIGN KEY (reserva_id) REFERENCES reservas(id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;


-- Tabla de reseñas (opiniones de los clientes)
CREATE TABLE reseñas (
  id INT AUTO_INCREMENT PRIMARY KEY,
  usuario_id INT NOT NULL,
  tour_id INT NOT NULL,
  calificacion INT CHECK (calificacion BETWEEN 1 AND 10),
  comentario TEXT,
  fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_reseña_usuario FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fk_reseña_tour FOREIGN KEY (tour_id) REFERENCES tours(id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;
